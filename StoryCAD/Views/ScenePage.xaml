    <Page NavigationCacheMode="Required"
    x:Class="StoryCAD.Views.ScenePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:StoryCAD.Models"            
    xmlns:usercontrols="using:StoryCAD.Controls"
    xmlns:viewModels="using:StoryCAD.ViewModels"
    mc:Ignorable="d" >

    <Page.Resources>
      
        <TeachingTip x:Name="ViewpointCharacterTip"
                     Title="Reminder:"
                     Subtitle="Pick a scene viewpoint character consistent with your story POV:"
                     PreferredPlacement="Auto"
                     IsOpen="{x:Bind SceneVm.VpCharTipIsOpen}"
                     Content="{x:Bind SceneVm.VpCharTip}" >
        </TeachingTip>      
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBox Header="Name" Text="{x:Bind SceneVm.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 viewModels:TextBoxFocus.IsFocused="{x:Bind SceneVm.IsTextBoxFocused, Mode=TwoWay}"
                 Margin="10,10,10,0" />
        <Pivot Grid.Row="1">
            <PivotItem Header="Scene">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Header="Date" Grid.Column="0" MinWidth="150"
                                 Text="{x:Bind SceneVm.Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Grid.Column="1" MinWidth="50"/>
                        <TextBox Header="Time" Grid.Column="2" MinWidth="100"
                                 Text="{x:Bind SceneVm.Time, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Grid.Column="3" MinWidth="50"/>
                        <ComboBox x:Name="ViewpointCharacter" Header="Viewpoint Character" 
                                  Grid.Column="4" IsEditable="False" MinWidth="250"
                                  DisplayMemberPath="Name"
                                  SelectedItem="{x:Bind SceneVm.SelectedViewpointCharacter, Mode=TwoWay}"
                                  ItemsSource="{x:Bind SceneVm.Characters, Mode=OneWay}" />
                    </Grid>
                    <Grid Grid.Row="1" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Header="Setting" Grid.Column="0" IsEditable="False" 
                                  MinWidth="300"  Margin="0,0,0,10"
                                  DisplayMemberPath="Name"
                                  SelectedItem="{x:Bind SceneVm.SelectedSetting, Mode=TwoWay}"
                                  ItemsSource="{x:Bind SceneVm.Settings, Mode=OneWay}" />
                        <TextBlock Grid.Column="1" MinWidth="50"/>
                        <ComboBox IsEditable="True" Header="SceneType" Grid.Column="2" MinWidth="200"
                                            ItemsSource="{x:Bind SceneVm.SceneTypeList}"
                                            Text="{x:Bind SceneVm.SceneType, Mode=TwoWay}"
                                            PlaceholderText="{x:Bind SceneVm.SceneType, Mode=TwoWay}"/>
                    </Grid>
                    <usercontrols:RichEditBoxExtended Header="Scene Sketch" Grid.Row="3"
                                                      RtfText="{x:Bind SceneVm.Remarks, Mode=TwoWay}"
                                                      AcceptsReturn="True"
                                                      IsSpellCheckEnabled="True" TextWrapping="Wrap"
                                                      ScrollViewer.VerticalScrollBarVisibility="Visible"/>
                </Grid>
            </PivotItem>
            <PivotItem Header="Cast">
                <StackPanel HorizontalAlignment="Left">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <ToggleSwitch HorizontalAlignment="Center" Width="200" Header="Cast Display" Margin="50,0,0,0" 
                                              IsOn="{x:Bind  SceneVm.AllCharacters, Mode=TwoWay}"  
                                              OffContent="Cast Members" OnContent="All Characters" 
                                              Toggled="{x:Bind SceneVm.SwitchCastView, Mode=OneWay}" >
                                <ToolTipService.ToolTip>
                                    <ToolTip Content="Show or Add/Remove Cast Members" />
                                </ToolTipService.ToolTip>
                            </ToggleSwitch>
                        </StackPanel>
                    </StackPanel>
                    <ScrollViewer Height="500">
                        <ListView MinWidth="300" x:Name="SceneCast"
                                    SelectionMode="Single"
                                    ItemsSource="{x:Bind SceneVm.CastSource, Mode=TwoWay}" >
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="models:StoryElement" >
                                    <StackPanel Orientation="Horizontal" Spacing="5">
                                        <CheckBox
                                                    Margin="0"
                                                    IsChecked="{x:Bind IsSelected ,Mode=TwoWay}"
                                                    Checked="CastMember_Checked" Unchecked="CastMember_Unchecked" />
                                        <ListView ItemsSource="{Binding CastSource}">
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Name}" />
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                        <TextBlock Text="{x:Bind Name, Mode=OneWay}" MinWidth="250" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </ScrollViewer>
                </StackPanel>
            </PivotItem>
            <PivotItem Header="Development">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="5*"/>
                        </Grid.ColumnDefinitions>
                        <ListView MinWidth="300" Height="125" x:Name="ScenePurpose" x:FieldModifier="public"
                                  SelectionMode="Single" Header="Purpose of Scene" 
                                  ItemsSource="{x:Bind SceneVm.ScenePurposes, Mode=TwoWay}" >
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="models:StringSelection" >
                                    <StackPanel Orientation="Horizontal" Spacing="2">
                                        <CheckBox Margin="0" 
                                                  Checked="ScenePurpose_Checked" Unchecked="ScenePurpose_Unchecked"
                                            IsChecked="{x:Bind Selection ,Mode=OneWay}" />
                                        <TextBlock MinWidth="250" 
                                            Text="{x:Bind StringName , Mode=OneWay}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <TextBlock Grid.Column="1" MinWidth="50"/>
                        <ComboBox Header="Value Exchange" Grid.Column="2" IsEditable="False" MinWidth="250"
                                            ItemsSource="{x:Bind SceneVm.ValueExchangeList}"
                                            SelectedValue="{x:Bind SceneVm.ValueExchange, Mode=TwoWay}"
                                            PlaceholderText="What changes for your scene's protagonist?."/>
                    </Grid>
                    <usercontrols:RichEditBoxExtended Header="What Happens" Grid.Row="1"
                                                      RtfText="{x:Bind SceneVm.Events, Mode=TwoWay}" AcceptsReturn="True"
                                                      IsSpellCheckEnabled="True" TextWrapping="Wrap"
                                                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                      PlaceholderText="(Plot/Cause) The way the scene starts to unfold."/>
                    <usercontrols:RichEditBoxExtended Header="The Consequence" Grid.Row="2"
                                                      RtfText="{x:Bind SceneVm.Consequences, Mode=TwoWay}" AcceptsReturn="True"
                                                      IsSpellCheckEnabled="True" TextWrapping="Wrap"
                                                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                      PlaceholderText="(Plot/Effect) The way the scene ends (usually a disaster)."/>
                    <usercontrols:RichEditBoxExtended Header="Why It Matters" Grid.Row="3"
                                                      RtfText="{x:Bind SceneVm.Significance, Mode=TwoWay}" AcceptsReturn="True"
                                                      IsSpellCheckEnabled="True" TextWrapping="Wrap"
                                                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                      PlaceholderText="(Inner Conflict/Cause) Why what happens affects or resonates with your protagonist."/>
                    <usercontrols:RichEditBoxExtended Header="The Realization" Grid.Row="4"
                                                      RtfText="{x:Bind SceneVm.Realization, Mode=TwoWay}" AcceptsReturn="True"
                                                      IsSpellCheckEnabled="True" TextWrapping="Wrap"
                                                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                      PlaceholderText="(Inner Conflict/Effect) How your protagonist changes or what she learns. (Consider Sequel.)"/>
                </Grid>
            </PivotItem>
            <PivotItem Header="Conflict">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Header="Protagonist" Grid.Row="0" IsEditable="False" MinWidth="300"
                                  DisplayMemberPath="Name"
                                  SelectedItem="{x:Bind SceneVm.SelectedProtagonist, Mode=TwoWay}"
                                  ItemsSource="{x:Bind SceneVm.Characters, Mode=OneWay}" />  
                        <TextBlock Grid.Column="1" MinWidth="50"/>
                        <ComboBox IsEditable="True" Header="Feelings" Grid.Column="2" MinWidth="200"
                                            ItemsSource="{x:Bind SceneVm.EmotionList}"
                                            Text="{x:Bind SceneVm.ProtagEmotion, Mode=TwoWay}" 
                                            PlaceholderText="{x:Bind SceneVm.ProtagEmotion, Mode=TwoWay}" />
                    </Grid>
                    <ComboBox IsEditable="True" Header="Protagonist's Goal" Grid.Row="1"  MinWidth="300"
                                        ItemsSource="{x:Bind SceneVm.GoalList}"
                                        Text="{x:Bind SceneVm.ProtagGoal, Mode=TwoWay}"
                                        PlaceholderText="{x:Bind SceneVm.ProtagGoal, Mode=TwoWay}"/>
                    <ComboBox IsEditable="True" Header="Opposition" Grid.Row="2" Width="400"
                                        ItemsSource="{x:Bind SceneVm.OppositionList}"
                                        Text="{x:Bind SceneVm.Opposition, Mode=TwoWay}" 
                                        PlaceholderText="{x:Bind SceneVm.Opposition, Mode=TwoWay}" 
                                        HorizontalAlignment="Left"/>
                    <Grid Grid.Row="3" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Header="Antagonist" Grid.Row="0" IsEditable="False" MinWidth="300"
                                  DisplayMemberPath="Name"
                                  SelectedItem="{x:Bind SceneVm.SelectedAntagonist, Mode=TwoWay}"
                                  ItemsSource="{x:Bind SceneVm.Characters, Mode=OneWay}" /> 
                        <TextBlock Grid.Column="1" MinWidth="50"/>
                        <ComboBox IsEditable="True" Header="Feelings" Grid.Column="2"  MinWidth="200"
                                            ItemsSource="{x:Bind SceneVm.EmotionList}"
                                            Text="{x:Bind SceneVm.AntagEmotion, Mode=TwoWay}" 
                                            PlaceholderText="{x:Bind SceneVm.AntagEmotion, Mode=TwoWay}" />
                    </Grid>
                    <ComboBox IsEditable="True" Header="Antagonist's Goal" Grid.Row="4" MinWidth="300"
                                        ItemsSource="{x:Bind SceneVm.GoalList}"
                                        Text="{x:Bind SceneVm.AntagGoal, Mode=TwoWay}" 
                                        PlaceholderText="{x:Bind SceneVm.AntagGoal, Mode=TwoWay}" />
                    <TextBlock Grid.Row="5" Text=" "/>
                    <ComboBox IsEditable="True" Header="Outcome" Grid.Row="5" Width="400"
                                        ItemsSource="{x:Bind SceneVm.OutcomeList}"
                                        Text="{x:Bind SceneVm.Outcome, Mode=TwoWay}"
                                        PlaceholderText="{x:Bind SceneVm.Outcome, Mode=TwoWay}"
                                        HorizontalAlignment="Left"/>
                </Grid>
            </PivotItem>
            <PivotItem Header="Sequel">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ComboBox IsEditable="True" Header="Emotional Response" Grid.Row="0" MinWidth="200"
                                        ItemsSource="{x:Bind SceneVm.EmotionList}"
                                        Text="{x:Bind SceneVm.Emotion, Mode=TwoWay}" 
                                        PlaceholderText="{x:Bind SceneVm.Emotion, Mode=TwoWay}" />
                    <usercontrols:RichEditBoxExtended Header="Review and Thought" Grid.Row="1"
                                                      RtfText="{x:Bind SceneVm.Review, Mode=TwoWay}" AcceptsReturn="True"
                                                      IsSpellCheckEnabled="True" TextWrapping="Wrap"
                                                      ScrollViewer.VerticalScrollBarVisibility="Visible" />
                    <ComboBox IsEditable="True" Header="New Goal" Grid.Row="2" MinWidth="400"
                                        ItemsSource="{x:Bind SceneVm.GoalList}"
                                        Text="{x:Bind SceneVm.NewGoal, Mode=TwoWay}" 
                                        PlaceholderText="{x:Bind SceneVm.NewGoal, Mode=TwoWay}" />
                </Grid>
            </PivotItem>
            <PivotItem Header="Notes">
                <usercontrols:RichEditBoxExtended Header="Notes" RtfText="{x:Bind SceneVm.Notes, Mode=TwoWay}" AcceptsReturn="True"
                                                  IsSpellCheckEnabled="True" TextWrapping="Wrap"
                                                  ScrollViewer.VerticalScrollBarVisibility="Visible" />
            </PivotItem>
        </Pivot>
    </Grid>

</Page>
